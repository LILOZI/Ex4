Ex4:	
	mouse clicked:

	if(_mode.equals("Scale_90%")) {
					for(int i =0;i<_shapes.size();i++){
						if(_shapes.get(i).isSelected()){
							GeoShapeable b1 = _shapes.get(i).getShape();
							scale(b1,0.9,p);
						}
					}
			}

			if(_mode.equals("Scale_110%")) {
				for(int i =0;i<_shapes.size();i++){
					if(_shapes.get(i).isSelected()){
						GeoShapeable b1 = _shapes.get(i).getShape();
						scale(b1,1.1,p);
					}
				}
			}
		
	new function scale:
		public void scale(GeoShapeable g,double ratio,Point2D po) {
			g.scale(po,ratio);
		}
		
		
Triangle:
	public void scale(Point2D center, double ratio) {
		double npx = (this.p1.x()*ratio + center.x()*(1-ratio));
		double npy = (this.p1.y()*ratio + center.y()*(1-ratio));
		this.p1 = new Point2D(npx,npy);
		npx = (this.p2.x()*ratio + center.x()*(1-ratio));
		npy = (this.p2.y()*ratio + center.y()*(1-ratio));
		this.p2 = new Point2D(npx,npy);
		npx = (this.p3.x()*ratio + center.x()*(1-ratio));
		npy = (this.p3.y()*ratio + center.y()*(1-ratio));
		this.p3 = new Point2D(npx,npy);
		
	}


Circle:
		public void scale(Point2D center, double ratio) {
		double ncx = (this._center.x()*ratio + center.x()*(1-ratio));
		double ncy = (this._center.y()*ratio + center.y()*(1-ratio));
		this._center = new Point2D(ncx,ncy);
		this._radius = this._radius * ratio;
	}
	
	
	
Rectangle:
	public boolean contains(Point2D ot) {
		double Area = area();

		Triangle2D t1 = new Triangle2D(this.Scorn,this._p3,ot);
		double A1 = t1.area();
		Triangle2D t2 = new Triangle2D(this.Scorn, this._p4 ,ot);
		double A2 = t2.area();
		Triangle2D t3 = new Triangle2D(this.Ecor , this._p3 , ot);
		double A3 = t3.area();
		Triangle2D t4 = new Triangle2D(this.Ecor , this._p4 , ot);
		double A4 = t4.area();
		return (A1+A2+A3+A4==Area);
	}
	
	public void scale(Point2D center, double ratio) {
		double npx = (this.Ecor.x()*ratio + center.x()*(1-ratio));
		double npy = (this.Ecor.y()*ratio + center.y()*(1-ratio));
		this.Ecor = new Point2D(npx,npy);
		npx = (this.Scorn.x()*ratio + center.x()*(1-ratio));
		npy = (this.Scorn.y()*ratio + center.y()*(1-ratio));
		this.Scorn = new Point2D(npx,npy);
		npx = (this._p3.x()*ratio + center.x()*(1-ratio));
		npy = (this._p3.y()*ratio + center.y()*(1-ratio));
		this._p3 = new Point2D(npx,npy);
		npx = (this._p4.x()*ratio + center.x()*(1-ratio));
		npy = (this._p4.y()*ratio + center.y()*(1-ratio));
		this._p4 = new Point2D(npx,npy);

	}

Point2D:
	public void scale(Point2D cen, double ratio) {
        this._x = (this._x*ratio + cen.x()*(1-ratio));
        this._y = (this._y*ratio + cen.y()*(1-ratio));
	}
	
	
	
Segment2D:
	public void scale(Point2D center, double ratio) {
		double npx = (this.p1.x()*ratio + center.x()*(1-ratio));
		double npy = (this.p1.y()*ratio + center.y()*(1-ratio));
		this.p1 = new Point2D(npx,npy);
		npx = (this.p2.x()*ratio + center.x()*(1-ratio));
		npy = (this.p2.y()*ratio + center.y()*(1-ratio));
		this.p2 = new Point2D(npx,npy);
	}
	